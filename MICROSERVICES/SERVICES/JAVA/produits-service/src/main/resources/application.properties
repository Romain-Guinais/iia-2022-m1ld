server.port = 8080

spring.datasource.url = jdbc:postgresql://localhost:5432/ms_produits
spring.datasource.username = postgres
spring.datasource.password = root

spring.jpa.hibernate.ddl-auto = update

# Client Eureka
spring.application.name = produits-service

eureka.client.register-with-eureka = true
eureka.client.fetch-registry = true
eureka.client.service-url.defaultZone = http://localhost:9000/eureka/

# Circuit Breaker
resilience4j.circuitbreaker.configs.default.wait-duration-in-open-state = 5s
resilience4j.timelimiter.configs.default.timeout-duration = 150ms

# RabbitMQ
spring.rabbitmq.host = localhost
spring.rabbitmq.port = 5672
spring.rabbitmq.username = guest
spring.rabbitmq.password = guest

# RabbitMQ - Exchanges & Queues (Producer)
spring.cloud.stream.bindings.produit-deletion-out-0.destination = ms.produit
spring.cloud.stream.rabbit.bindings.produit-deletion-out-0.producer.routing-key-expression = 'produit.deletion.askfor'

spring.cloud.stream.bindings.produit-deleted-out-0.destination = ms.produit
spring.cloud.stream.rabbit.bindings.produit-deleted-out-0.producer.routing-key-expression = 'produit.deleted'

spring.cloud.stream.bindings.produit-detailed-out-0.destination = ms.produit
spring.cloud.stream.rabbit.bindings.produit-detailed-out-0.producer.routing-key-expression = 'produit.detailed'

# RabbitMQ - Exchanges & Queues (Consumer)
spring.cloud.function.definition = produitDeletionOk;produitDetails

spring.cloud.stream.bindings.produitDeletionOk-in-0.destination = ms.produit
spring.cloud.stream.bindings.produitDeletionOk-in-0.group = deletion.ok.produit
spring.cloud.stream.rabbit.bindings.produitDeletionOk-in-0.consumer.binding-routing-key = produit.deletion.ok

spring.cloud.stream.bindings.produitDetails-in-0.destination = ms.produit
spring.cloud.stream.bindings.produitDetails-in-0.group = details.produit
spring.cloud.stream.rabbit.bindings.produitDetails-in-0.consumer.binding-routing-key = produit.details
